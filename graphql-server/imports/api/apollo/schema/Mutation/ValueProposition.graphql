type ValuePropositionPayload {
  valueProposition: ValueProposition
}

input ValuePropositionMatchedToInput {
  documentId: ID!
  documentType: String!
}

input CreateValuePropositionInput {
  organizationId: ID!
  title: String!
  originatorId: ID!
  color: String!
  notes: String
  matchedTo: ValuePropositionMatchedToInput
}

input UpdateValuePropositionInput {
  _id: ID!
  title: String
  originatorId: ID
  color: String
  notes: String
  fileIds: [String]
  notify: [ID]
  goalIds: [ID]
  standardsIds: [ID]
  fileIds: [ID]
  riskIds: [ID]
  nonconformityIds: [ID]
  potentialGainIds: [ID]
}

input DeleteValuePropositionInput {
  _id: ID!
}

input MatchValuePropositionInput {
  _id: ID!
  matchedTo: ValuePropositionMatchedToInput
}

type Mutation {
  createValueProposition(input: CreateValuePropositionInput!): ValuePropositionPayload
  updateValueProposition(input: UpdateValuePropositionInput!): ValueProposition
  deleteValueProposition(input: DeleteValuePropositionInput!): ValueProposition
  matchValueProposition(input: MatchValuePropositionInput!): ValueProposition
}